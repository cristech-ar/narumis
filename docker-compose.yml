version: "3.8"
services:
  expressapp:
    container_name: expressapp
    restart: unless-stopped
    build: 
      context: server
      dockerfile: Dockerfile
    ports: 
      - 8080:8080
    networks: 
      - shared-network
  reactapp:
    container_name: reactapp
    build: 
      context: client
      dockerfile: Dockerfile
    ports: 
      - 4001:4001
    networks: 
      - shared-network
    depends_on:
      - expressapp
  proxy:
    image: 'docker.io/jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks: 
      - shared-network
    depends_on:
      - reactapp
      - expressapp
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - 27017:27017
    networks: 
      - shared-network
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks: 
      - shared-network
    depends_on:
      - mongo
networks:
  shared-network: